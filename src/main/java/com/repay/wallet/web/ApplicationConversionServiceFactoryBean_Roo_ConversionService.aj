// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.repay.wallet.web;

import com.repay.wallet.domain.Txn;
import com.repay.wallet.domain.TxnType;
import com.repay.wallet.domain.UserDtls;
import com.repay.wallet.domain.Wallet;
import com.repay.wallet.domain.WalletType;
import com.repay.wallet.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Txn, String> ApplicationConversionServiceFactoryBean.getTxnToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.repay.wallet.domain.Txn, java.lang.String>() {
            public String convert(Txn txn) {
                return new StringBuilder().append(txn.getTxnId()).append(' ').append(txn.getSenderAccountNumber()).append(' ').append(txn.getReceiverAccountNumber()).append(' ').append(txn.getCurrency()).toString();
            }
        };
    }
    
    public Converter<Long, Txn> ApplicationConversionServiceFactoryBean.getIdToTxnConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.repay.wallet.domain.Txn>() {
            public com.repay.wallet.domain.Txn convert(java.lang.Long id) {
                return Txn.findTxn(id);
            }
        };
    }
    
    public Converter<String, Txn> ApplicationConversionServiceFactoryBean.getStringToTxnConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.repay.wallet.domain.Txn>() {
            public com.repay.wallet.domain.Txn convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Txn.class);
            }
        };
    }
    
    public Converter<TxnType, String> ApplicationConversionServiceFactoryBean.getTxnTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.repay.wallet.domain.TxnType, java.lang.String>() {
            public String convert(TxnType txnType) {
                return new StringBuilder().append(txnType.getTxnTypeId()).append(' ').append(txnType.getTxnTypeName()).toString();
            }
        };
    }
    
    public Converter<Long, TxnType> ApplicationConversionServiceFactoryBean.getIdToTxnTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.repay.wallet.domain.TxnType>() {
            public com.repay.wallet.domain.TxnType convert(java.lang.Long id) {
                return TxnType.findTxnType(id);
            }
        };
    }
    
    public Converter<String, TxnType> ApplicationConversionServiceFactoryBean.getStringToTxnTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.repay.wallet.domain.TxnType>() {
            public com.repay.wallet.domain.TxnType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TxnType.class);
            }
        };
    }
    
    public Converter<UserDtls, String> ApplicationConversionServiceFactoryBean.getUserDtlsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.repay.wallet.domain.UserDtls, java.lang.String>() {
            public String convert(UserDtls userDtls) {
                return new StringBuilder().append(userDtls.getUserId()).append(' ').append(userDtls.getUserName()).toString();
            }
        };
    }
    
    public Converter<Long, UserDtls> ApplicationConversionServiceFactoryBean.getIdToUserDtlsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.repay.wallet.domain.UserDtls>() {
            public com.repay.wallet.domain.UserDtls convert(java.lang.Long id) {
                return UserDtls.findUserDtls(id);
            }
        };
    }
    
    public Converter<String, UserDtls> ApplicationConversionServiceFactoryBean.getStringToUserDtlsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.repay.wallet.domain.UserDtls>() {
            public com.repay.wallet.domain.UserDtls convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), UserDtls.class);
            }
        };
    }
    
    public Converter<Wallet, String> ApplicationConversionServiceFactoryBean.getWalletToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.repay.wallet.domain.Wallet, java.lang.String>() {
            public String convert(Wallet wallet) {
                return new StringBuilder().append(wallet.getWalletId()).append(' ').append(wallet.getCurrency()).append(' ').append(wallet.getBalance()).append(' ').append(wallet.getCreatedBy()).toString();
            }
        };
    }
    
    public Converter<Long, Wallet> ApplicationConversionServiceFactoryBean.getIdToWalletConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.repay.wallet.domain.Wallet>() {
            public com.repay.wallet.domain.Wallet convert(java.lang.Long id) {
                return Wallet.findWallet(id);
            }
        };
    }
    
    public Converter<String, Wallet> ApplicationConversionServiceFactoryBean.getStringToWalletConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.repay.wallet.domain.Wallet>() {
            public com.repay.wallet.domain.Wallet convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Wallet.class);
            }
        };
    }
    
    public Converter<WalletType, String> ApplicationConversionServiceFactoryBean.getWalletTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.repay.wallet.domain.WalletType, java.lang.String>() {
            public String convert(WalletType walletType) {
                return new StringBuilder().append(walletType.getWalletTypeId()).append(' ').append(walletType.getWalletTypeName()).append(' ').append(walletType.getWalletTypeDescription()).toString();
            }
        };
    }
    
    public Converter<Long, WalletType> ApplicationConversionServiceFactoryBean.getIdToWalletTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.repay.wallet.domain.WalletType>() {
            public com.repay.wallet.domain.WalletType convert(java.lang.Long id) {
                return WalletType.findWalletType(id);
            }
        };
    }
    
    public Converter<String, WalletType> ApplicationConversionServiceFactoryBean.getStringToWalletTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.repay.wallet.domain.WalletType>() {
            public com.repay.wallet.domain.WalletType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), WalletType.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getTxnToStringConverter());
        registry.addConverter(getIdToTxnConverter());
        registry.addConverter(getStringToTxnConverter());
        registry.addConverter(getTxnTypeToStringConverter());
        registry.addConverter(getIdToTxnTypeConverter());
        registry.addConverter(getStringToTxnTypeConverter());
        registry.addConverter(getUserDtlsToStringConverter());
        registry.addConverter(getIdToUserDtlsConverter());
        registry.addConverter(getStringToUserDtlsConverter());
        registry.addConverter(getWalletToStringConverter());
        registry.addConverter(getIdToWalletConverter());
        registry.addConverter(getStringToWalletConverter());
        registry.addConverter(getWalletTypeToStringConverter());
        registry.addConverter(getIdToWalletTypeConverter());
        registry.addConverter(getStringToWalletTypeConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
